{application,rabbit,
    [{description,"RabbitMQ"},
     {id,"RabbitMQ"},
     {vsn,"3.4.2"},
     {modules,
         [app_utils,background_gc,credit_flow,delegate,delegate_sup,dtree,
          file_handle_cache,gatherer,gen_server2,gm,lqueue,
          mirrored_supervisor,mirrored_supervisor_sups,mnesia_sync,mochijson2,
          mochinum,pg2_fixed,pg_local,pmon,priority_queue,rabbit,
          rabbit_access_control,rabbit_alarm,rabbit_amqqueue,
          rabbit_amqqueue_process,rabbit_amqqueue_sup,rabbit_amqqueue_sup_sup,
          rabbit_auth_backend,rabbit_auth_backend_dummy,
          rabbit_auth_backend_internal,rabbit_auth_mechanism,
          rabbit_auth_mechanism_amqplain,rabbit_auth_mechanism_cr_demo,
          rabbit_auth_mechanism_plain,rabbit_autoheal,rabbit_backing_queue,
          rabbit_basic,rabbit_binary_generator,rabbit_binary_parser,
          rabbit_binding,rabbit_channel,rabbit_channel_interceptor,
          rabbit_channel_sup,rabbit_channel_sup_sup,rabbit_cli,
          rabbit_client_sup,rabbit_command_assembler,
          rabbit_connection_helper_sup,rabbit_connection_sup,
          rabbit_control_main,rabbit_ctl_usage,rabbit_dead_letter,
          rabbit_diagnostics,rabbit_direct,rabbit_disk_monitor,
          rabbit_error_logger,rabbit_error_logger_file_h,rabbit_event,
          rabbit_exchange,rabbit_exchange_decorator,rabbit_exchange_type,
          rabbit_exchange_type_direct,rabbit_exchange_type_fanout,
          rabbit_exchange_type_headers,rabbit_exchange_type_invalid,
          rabbit_exchange_type_topic,rabbit_file,rabbit_framing,
          rabbit_framing_amqp_0_8,rabbit_framing_amqp_0_9_1,rabbit_guid,
          rabbit_heartbeat,rabbit_limiter,rabbit_log,rabbit_memory_monitor,
          rabbit_mirror_queue_coordinator,rabbit_mirror_queue_master,
          rabbit_mirror_queue_misc,rabbit_mirror_queue_mode,
          rabbit_mirror_queue_mode_all,rabbit_mirror_queue_mode_exactly,
          rabbit_mirror_queue_mode_nodes,rabbit_mirror_queue_slave,
          rabbit_mirror_queue_sync,rabbit_misc,rabbit_mnesia,rabbit_msg_file,
          rabbit_msg_store,rabbit_msg_store_ets_index,rabbit_msg_store_gc,
          rabbit_msg_store_index,rabbit_net,rabbit_networking,
          rabbit_node_monitor,rabbit_nodes,rabbit_parameter_validation,
          rabbit_plugins,rabbit_plugins_main,rabbit_plugins_usage,
          rabbit_policies,rabbit_policy,rabbit_policy_validator,
          rabbit_prelaunch,rabbit_prequeue,rabbit_queue_collector,
          rabbit_queue_consumers,rabbit_queue_decorator,rabbit_queue_index,
          rabbit_reader,rabbit_recovery_terms,rabbit_registry,
          rabbit_restartable_sup,rabbit_router,rabbit_runtime_parameter,
          rabbit_runtime_parameters,rabbit_sasl_report_file_h,rabbit_ssl,
          rabbit_sup,rabbit_table,rabbit_trace,rabbit_types,rabbit_upgrade,
          rabbit_upgrade_functions,rabbit_variable_queue,rabbit_version,
          rabbit_vhost,rabbit_vm,rabbit_writer,supervised_lifecycle,
          supervisor2,tcp_acceptor,tcp_acceptor_sup,tcp_listener,
          tcp_listener_sup,truncate,vm_memory_monitor,worker_pool,
          worker_pool_sup,worker_pool_worker]},
     {registered,
         [rabbit_amqqueue_sup,rabbit_log,rabbit_node_monitor,rabbit_router,
          rabbit_sup,rabbit_tcp_client_sup,rabbit_direct_client_sup]},
     {applications,[kernel,stdlib,sasl,mnesia,os_mon,xmerl]},
     {mod,{rabbit,[]}},
     {env,
         [{tcp_listeners,[5672]},
          {ssl_listeners,[]},
          {ssl_options,[]},
          {vm_memory_high_watermark,0.4},
          {vm_memory_high_watermark_paging_ratio,0.5},
          {disk_free_limit,50000000},
          {msg_store_index_module,rabbit_msg_store_ets_index},
          {backing_queue_module,rabbit_variable_queue},
          {frame_max,131072},
          {channel_max,0},
          {heartbeat,580},
          {msg_store_file_size_limit,16777216},
          {queue_index_max_journal_entries,65536},
          {default_user,<<"guest">>},
          {default_pass,<<"guest">>},
          {default_user_tags,[administrator]},
          {default_vhost,<<"/">>},
          {default_permissions,[<<".*">>,<<".*">>,<<".*">>]},
          {loopback_users,[<<"guest">>]},
          {cluster_nodes,{[],disc}},
          {server_properties,[]},
          {collect_statistics,none},
          {collect_statistics_interval,5000},
          {mnesia_table_loading_timeout,30000},
          {auth_mechanisms,['PLAIN','AMQPLAIN']},
          {auth_backends,[rabbit_auth_backend_internal]},
          {delegate_count,16},
          {trace_vhosts,[]},
          {log_levels,[{connection,info}]},
          {ssl_cert_login_from,distinguished_name},
          {ssl_handshake_timeout,5000},
          {ssl_allow_poodle_attack,false},
          {handshake_timeout,10000},
          {reverse_dns_lookups,false},
          {cluster_partition_handling,ignore},
          {cluster_keepalive_interval,10000},
          {tcp_listen_options,
              [binary,
               {packet,raw},
               {reuseaddr,true},
               {backlog,128},
               {nodelay,true},
               {linger,{true,0}},
               {exit_on_close,false}]},
          {halt_on_upgrade_failure,true},
          {hipe_compile,false},
          {hipe_modules,
              [rabbit_reader,rabbit_channel,gen_server2,rabbit_exchange,
               rabbit_command_assembler,rabbit_framing_amqp_0_9_1,
               rabbit_basic,rabbit_event,lists,queue,priority_queue,
               rabbit_router,rabbit_trace,rabbit_misc,rabbit_binary_parser,
               rabbit_exchange_type_direct,rabbit_guid,rabbit_net,
               rabbit_amqqueue_process,rabbit_variable_queue,
               rabbit_binary_generator,rabbit_writer,delegate,gb_sets,lqueue,
               sets,orddict,rabbit_amqqueue,rabbit_limiter,gb_trees,
               rabbit_queue_index,rabbit_exchange_decorator,gen,dict,ordsets,
               file_handle_cache,rabbit_msg_store,array,
               rabbit_msg_store_ets_index,rabbit_msg_file,
               rabbit_exchange_type_fanout,rabbit_exchange_type_topic,mnesia,
               mnesia_lib,rpc,mnesia_tm,qlc,sofs,proplists,credit_flow,pmon,
               ssl_connection,tls_connection,ssl_record,tls_record,gen_fsm,
               ssl]},
          {ssl_apps,[asn1,crypto,public_key,ssl]}]}]}.
